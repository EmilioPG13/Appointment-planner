{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Emili\\\\Desktop\\\\appointment-planner-\\\\src\\\\components\\\\appointmentForm\\\\AppointmentForm.js\";\nimport React from \"react\";\nimport { ContactPicker } from \"../contactPicker/ContactPicker\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const AppointmentForm = _ref => {\n  let {\n    contacts,\n    title,\n    setTitle,\n    contact,\n    setContact,\n    date,\n    setDate,\n    time,\n    setTime,\n    handleSubmit\n  } = _ref;\n  console.log(\"Contacts:\", contacts);\n  // Check if contacts is iterable\n  if (!Array.isArray(contacts)) {\n    // If contacts is not an array, return a message or handle the error accordingly\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"No contacts available\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 12\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    onSubmit: handleSubmit,\n    children: [/*#__PURE__*/_jsxDEV(\"label\", {\n      htmlFor: \"title\",\n      children: \"Title:\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      id: \"title\",\n      value: title,\n      onChange: e => setTitle(e.target.value)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n      htmlFor: \"contact\",\n      children: \"Contact:\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(ContactPicker, {\n      contacts: contacts,\n      value: contact,\n      name: \"contact\",\n      onChange: e => setContact(e.target.value)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n      htmlFor: \"date\",\n      children: \"Date:\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"date\",\n      id: \"date\",\n      value: date,\n      onChange: e => setDate(e.target.value)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n      htmlFor: \"time\",\n      children: \"Time:\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"time\",\n      id: \"time\",\n      value: time,\n      onChange: e => setTime(e.target.value)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      type: \"submit\",\n      children: \"Submit\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 24,\n    columnNumber: 5\n  }, this);\n};\n_c = AppointmentForm;\nvar _c;\n$RefreshReg$(_c, \"AppointmentForm\");","map":{"version":3,"names":["React","ContactPicker","jsxDEV","_jsxDEV","AppointmentForm","_ref","contacts","title","setTitle","contact","setContact","date","setDate","time","setTime","handleSubmit","console","log","Array","isArray","children","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","htmlFor","type","id","value","onChange","e","target","name","_c","$RefreshReg$"],"sources":["C:/Users/Emili/Desktop/appointment-planner-/src/components/appointmentForm/AppointmentForm.js"],"sourcesContent":["import React from \"react\";\r\nimport { ContactPicker } from \"../contactPicker/ContactPicker\";\r\n\r\nexport const AppointmentForm = ({\r\n  contacts,\r\n  title,\r\n  setTitle,\r\n  contact,\r\n  setContact,\r\n  date,\r\n  setDate,\r\n  time,\r\n  setTime,\r\n  handleSubmit\r\n}) => {\r\n  console.log(\"Contacts:\", contacts);\r\n  // Check if contacts is iterable\r\n  if (!Array.isArray(contacts)) {\r\n    // If contacts is not an array, return a message or handle the error accordingly\r\n    return <div>No contacts available</div>;\r\n  }\r\n\r\n  return (\r\n    <form onSubmit={handleSubmit}>\r\n      <label htmlFor=\"title\">Title:</label>\r\n      <input\r\n        type=\"text\"\r\n        id=\"title\"\r\n        value={title}\r\n        onChange={(e) => setTitle(e.target.value)}\r\n      />\r\n      <label htmlFor=\"contact\">Contact:</label>\r\n      <ContactPicker\r\n        contacts={contacts}\r\n        value={contact}\r\n        name=\"contact\"\r\n        onChange={(e) => setContact(e.target.value)}\r\n      />\r\n      <label htmlFor=\"date\">Date:</label>\r\n      <input\r\n        type=\"date\"\r\n        id=\"date\"\r\n        value={date}\r\n        onChange={(e) => setDate(e.target.value)}\r\n      />\r\n      <label htmlFor=\"time\">Time:</label>\r\n      <input\r\n        type=\"time\"\r\n        id=\"time\"\r\n        value={time}\r\n        onChange={(e) => setTime(e.target.value)}\r\n      />\r\n      <button type=\"submit\">Submit</button>\r\n    </form>\r\n  );\r\n};\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}