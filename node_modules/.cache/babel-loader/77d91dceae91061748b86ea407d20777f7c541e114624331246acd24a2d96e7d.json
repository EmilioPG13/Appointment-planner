{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Emili\\\\Desktop\\\\appointment-planner-\\\\src\\\\components\\\\contactForm\\\\ContactForm.js\";\nimport React from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const ContactForm = _ref => {\n  let {\n    name,\n    setName,\n    phone,\n    setPhone,\n    email,\n    setEmail,\n    handleSubmit\n  } = _ref;\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    onSubmit: handleSubmit,\n    children: [/*#__PURE__*/_jsxDEV(\"label\", {\n      htmlFor: \"nameInput\",\n      children: \"Name\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 15,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      value: name,\n      onChange: e => setName(e.target.value),\n      type: \"text\",\n      id: \"nameInput\",\n      required: true\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n      htmlFor: \"phoneInput\",\n      children: \"Phone\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      value: name,\n      onChange: e => setPhone(e.target.value),\n      type: \"tel\",\n      pattern: \"^\\\\s*\\\\(?(020[7,8]{1}\\\\)?[ ]?[1-9]{1}[0-9{2}[ ]?[0-9]{4})|(0[1-8]{1}[0-9]{3}\\\\)?[ ]?[1-9]{1}[0-9]{2}[ ]?[0-9]{3})\\\\s*$\",\n      id: \"phoneInput\",\n      required: true\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n      htmlFor: \"emailInput\",\n      children: \"Email\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      value: email,\n      onChange: e => setEmail(e.target.value),\n      type: \"email\",\n      id: \"emailInput\",\n      required: true\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      type: \"submit\",\n      disabled: alert ? true : false,\n      children: \"Add Contact\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n      children: alert\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 14,\n    columnNumber: 5\n  }, this);\n};\n\n/* ContactForm.js is located in the /src/components/contactForm directory in the file explorer and should already be open in the code editor.\r\n\r\nBased on the given requirements, implement ContactForm as a stateless component that renders a web form to collect the necessary contact information.\r\n\r\nContactForm Requirements:\r\n\r\n    Render a form with:\r\n        The onSubmit attribute set\r\n        3 controlled <input> elements, one for each piece of contact data\r\n        A submit button\r\n    Include a pattern attribute to the phone <input> with a regex that matches the phone locale of your preference\r\n\r\n */\n_c = ContactForm;\nvar _c;\n$RefreshReg$(_c, \"ContactForm\");","map":{"version":3,"names":["React","jsxDEV","_jsxDEV","ContactForm","_ref","name","setName","phone","setPhone","email","setEmail","handleSubmit","onSubmit","children","htmlFor","fileName","_jsxFileName","lineNumber","columnNumber","value","onChange","e","target","type","id","required","pattern","disabled","alert","_c","$RefreshReg$"],"sources":["C:/Users/Emili/Desktop/appointment-planner-/src/components/contactForm/ContactForm.js"],"sourcesContent":["import React from \"react\";\r\n\r\nexport const ContactForm = ({\r\n  name,\r\n  setName,\r\n  phone,\r\n  setPhone,\r\n  email,\r\n  setEmail,\r\n  handleSubmit\r\n}) => {\r\n\r\n  return (\r\n    <form onSubmit={handleSubmit}>\r\n      <label htmlFor=\"nameInput\">Name</label>\r\n      <input \r\n        value={name}\r\n        onChange={(e) => setName(e.target.value)}\r\n        type=\"text\"\r\n        id=\"nameInput\"\r\n        required\r\n      />\r\n      <label htmlFor=\"phoneInput\">Phone</label>\r\n      <input \r\n        value={name}\r\n        onChange={(e) => setPhone(e.target.value)}\r\n        type=\"tel\"\r\n        pattern=\"^\\s*\\(?(020[7,8]{1}\\)?[ ]?[1-9]{1}[0-9{2}[ ]?[0-9]{4})|(0[1-8]{1}[0-9]{3}\\)?[ ]?[1-9]{1}[0-9]{2}[ ]?[0-9]{3})\\s*$\"\r\n        id=\"phoneInput\"\r\n        required\r\n      />\r\n      <label htmlFor=\"emailInput\">Email</label>\r\n      <input \r\n        value={email}\r\n        onChange={(e) => setEmail(e.target.value)}\r\n        type=\"email\"\r\n        id=\"emailInput\"\r\n        required\r\n      />\r\n      <button type=\"submit\" disabled={alert ? true : false} >Add Contact</button>\r\n      <h2  >{alert}</h2>\r\n    </form>\r\n  );\r\n};\r\n\r\n/* ContactForm.js is located in the /src/components/contactForm directory in the file explorer and should already be open in the code editor.\r\n\r\nBased on the given requirements, implement ContactForm as a stateless component that renders a web form to collect the necessary contact information.\r\n\r\nContactForm Requirements:\r\n\r\n    Render a form with:\r\n        The onSubmit attribute set\r\n        3 controlled <input> elements, one for each piece of contact data\r\n        A submit button\r\n    Include a pattern attribute to the phone <input> with a regex that matches the phone locale of your preference\r\n\r\n */"],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE1B,OAAO,MAAMC,WAAW,GAAGC,IAAA,IAQrB;EAAA,IARsB;IAC1BC,IAAI;IACJC,OAAO;IACPC,KAAK;IACLC,QAAQ;IACRC,KAAK;IACLC,QAAQ;IACRC;EACF,CAAC,GAAAP,IAAA;EAEC,oBACEF,OAAA;IAAMU,QAAQ,EAAED,YAAa;IAAAE,QAAA,gBAC3BX,OAAA;MAAOY,OAAO,EAAC,WAAW;MAAAD,QAAA,EAAC;IAAI;MAAAE,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QAAQ,eACvChB,OAAA;MACEiB,KAAK,EAAEd,IAAK;MACZe,QAAQ,EAAGC,CAAC,IAAKf,OAAO,CAACe,CAAC,CAACC,MAAM,CAACH,KAAK,CAAE;MACzCI,IAAI,EAAC,MAAM;MACXC,EAAE,EAAC,WAAW;MACdC,QAAQ;IAAA;MAAAV,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QACR,eACFhB,OAAA;MAAOY,OAAO,EAAC,YAAY;MAAAD,QAAA,EAAC;IAAK;MAAAE,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QAAQ,eACzChB,OAAA;MACEiB,KAAK,EAAEd,IAAK;MACZe,QAAQ,EAAGC,CAAC,IAAKb,QAAQ,CAACa,CAAC,CAACC,MAAM,CAACH,KAAK,CAAE;MAC1CI,IAAI,EAAC,KAAK;MACVG,OAAO,EAAC,wHAAmH;MAC3HF,EAAE,EAAC,YAAY;MACfC,QAAQ;IAAA;MAAAV,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QACR,eACFhB,OAAA;MAAOY,OAAO,EAAC,YAAY;MAAAD,QAAA,EAAC;IAAK;MAAAE,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QAAQ,eACzChB,OAAA;MACEiB,KAAK,EAAEV,KAAM;MACbW,QAAQ,EAAGC,CAAC,IAAKX,QAAQ,CAACW,CAAC,CAACC,MAAM,CAACH,KAAK,CAAE;MAC1CI,IAAI,EAAC,OAAO;MACZC,EAAE,EAAC,YAAY;MACfC,QAAQ;IAAA;MAAAV,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QACR,eACFhB,OAAA;MAAQqB,IAAI,EAAC,QAAQ;MAACI,QAAQ,EAAEC,KAAK,GAAG,IAAI,GAAG,KAAM;MAAAf,QAAA,EAAE;IAAW;MAAAE,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QAAS,eAC3EhB,OAAA;MAAAW,QAAA,EAAOe;IAAK;MAAAb,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QAAM;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,QACb;AAEX,CAAC;;AAED;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAZAW,EAAA,GA3Ca1B,WAAW;AAAA,IAAA0B,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}