{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Emili\\\\Desktop\\\\appointment-planner-\\\\src\\\\containers\\\\appointmentsPage\\\\AppointmentsPage.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport { AppointmentForm } from \"../../components/appointmentForm/AppointmentForm\";\nimport { TileList } from \"../../components/tileList/TileList\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const AppointmentsPage = props => {\n  _s();\n  /* Define state variables for appointment info */\n  const [currentTitle, setCurrentTitle] = useState('');\n  const [currentContact, setCurrentContact] = useState('');\n  const [currentDate, setCurrentDate] = useState('');\n  const [currentTime, setCurrentTime] = useState('');\n  const [alert, setAlert] = useState('');\n  const defaultListValue = 'No contact selected';\n  const handleSubmit = e => {\n    e.preventDefault();\n    /* Add contact info and clear data */\n    props.addAppointment(currentTitle, currentContact, currentDate, currentTime);\n    setCurrentTitle('');\n    setCurrentContact('');\n    setCurrentDate('');\n    setCurrentTime('');\n    document.getElementById('contactList').value = defaultListValue;\n  };\n  useEffect(() => {\n    for (const appointmentItem of props.appointments) {\n      if (appointmentItem.date === currentDate && appointmentItem.time === currentTime) {\n        setAlert('Appointment is already booked.');\n        conso;\n      }\n    }\n  });\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"section\", {\n      children: /*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Add Appointment\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"hr\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"section\", {\n      children: /*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Appointments\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 37,\n    columnNumber: 5\n  }, this);\n};\n_s(AppointmentsPage, \"0vdG2mBomsVpGh4p0x32D3PSA44=\");\n_c = AppointmentsPage;\nvar _c;\n$RefreshReg$(_c, \"AppointmentsPage\");","map":{"version":3,"names":["React","useState","useEffect","AppointmentForm","TileList","jsxDEV","_jsxDEV","AppointmentsPage","props","_s","currentTitle","setCurrentTitle","currentContact","setCurrentContact","currentDate","setCurrentDate","currentTime","setCurrentTime","alert","setAlert","defaultListValue","handleSubmit","e","preventDefault","addAppointment","document","getElementById","value","appointmentItem","appointments","date","time","conso","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/Emili/Desktop/appointment-planner-/src/containers/appointmentsPage/AppointmentsPage.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\r\n\r\nimport { AppointmentForm } from \"../../components/appointmentForm/AppointmentForm\";\r\nimport { TileList } from \"../../components/tileList/TileList\";\r\n\r\nexport const AppointmentsPage = (props) => {\r\n  /* Define state variables for appointment info */\r\n  const [currentTitle, setCurrentTitle] = useState('');\r\n  const [currentContact, setCurrentContact] = useState('');\r\n  const [currentDate, setCurrentDate] = useState('');\r\n  const [currentTime, setCurrentTime] = useState('');\r\n  const [alert, setAlert] = useState('');\r\n  const defaultListValue = 'No contact selected';\r\n\r\n\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    /* Add contact info and clear data */\r\n    props.addAppointment(currentTitle, currentContact, currentDate, currentTime);\r\n    setCurrentTitle('');\r\n    setCurrentContact('');\r\n    setCurrentDate('');\r\n    setCurrentTime('');\r\n    document.getElementById('contactList').value = defaultListValue;\r\n  };\r\n\r\n  useEffect(() => {\r\n    for(const appointmentItem of props.appointments) {\r\n      if (appointmentItem.date === currentDate && appointmentItem.time === currentTime) {\r\n        setAlert('Appointment is already booked.');\r\n        conso\r\n      }\r\n    }\r\n  })\r\n\r\n  return (\r\n    <div>\r\n      <section>\r\n        <h2>Add Appointment</h2>\r\n      </section>\r\n      <hr />\r\n      <section>\r\n        <h2>Appointments</h2>\r\n      </section>\r\n    </div>\r\n  );\r\n};"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAElD,SAASC,eAAe,QAAQ,kDAAkD;AAClF,SAASC,QAAQ,QAAQ,oCAAoC;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE9D,OAAO,MAAMC,gBAAgB,GAAIC,KAAK,IAAK;EAAAC,EAAA;EACzC;EACA,MAAM,CAACC,YAAY,EAAEC,eAAe,CAAC,GAAGV,QAAQ,CAAC,EAAE,CAAC;EACpD,MAAM,CAACW,cAAc,EAAEC,iBAAiB,CAAC,GAAGZ,QAAQ,CAAC,EAAE,CAAC;EACxD,MAAM,CAACa,WAAW,EAAEC,cAAc,CAAC,GAAGd,QAAQ,CAAC,EAAE,CAAC;EAClD,MAAM,CAACe,WAAW,EAAEC,cAAc,CAAC,GAAGhB,QAAQ,CAAC,EAAE,CAAC;EAClD,MAAM,CAACiB,KAAK,EAAEC,QAAQ,CAAC,GAAGlB,QAAQ,CAAC,EAAE,CAAC;EACtC,MAAMmB,gBAAgB,GAAG,qBAAqB;EAG9C,MAAMC,YAAY,GAAIC,CAAC,IAAK;IAC1BA,CAAC,CAACC,cAAc,EAAE;IAClB;IACAf,KAAK,CAACgB,cAAc,CAACd,YAAY,EAAEE,cAAc,EAAEE,WAAW,EAAEE,WAAW,CAAC;IAC5EL,eAAe,CAAC,EAAE,CAAC;IACnBE,iBAAiB,CAAC,EAAE,CAAC;IACrBE,cAAc,CAAC,EAAE,CAAC;IAClBE,cAAc,CAAC,EAAE,CAAC;IAClBQ,QAAQ,CAACC,cAAc,CAAC,aAAa,CAAC,CAACC,KAAK,GAAGP,gBAAgB;EACjE,CAAC;EAEDlB,SAAS,CAAC,MAAM;IACd,KAAI,MAAM0B,eAAe,IAAIpB,KAAK,CAACqB,YAAY,EAAE;MAC/C,IAAID,eAAe,CAACE,IAAI,KAAKhB,WAAW,IAAIc,eAAe,CAACG,IAAI,KAAKf,WAAW,EAAE;QAChFG,QAAQ,CAAC,gCAAgC,CAAC;QAC1Ca,KAAK;MACP;IACF;EACF,CAAC,CAAC;EAEF,oBACE1B,OAAA;IAAA2B,QAAA,gBACE3B,OAAA;MAAA2B,QAAA,eACE3B,OAAA;QAAA2B,QAAA,EAAI;MAAe;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA;IAAK;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QAChB,eACV/B,OAAA;MAAA4B,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QAAM,eACN/B,OAAA;MAAA2B,QAAA,eACE3B,OAAA;QAAA2B,QAAA,EAAI;MAAY;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA;IAAK;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QACb;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,QACN;AAEV,CAAC;AAAC5B,EAAA,CAzCWF,gBAAgB;AAAA+B,EAAA,GAAhB/B,gBAAgB;AAAA,IAAA+B,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}